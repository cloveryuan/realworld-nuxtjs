# 自动部署的名称
name: Publish And Deploy Demo

# 不是每次push都要部署到服务端，当需要部署的时候会生一个标签tag，就相当于一个版本，用这个标签来管理我们项目的版本比如1.0  1.1
on:
  push:
    tags:  
      - 'v*'   

# 执行的工作
jobs:
  # 构建和部署build-and-deploy
  build-and-deploy:
  # 运行环境runs-on
    runs-on: ubuntu-latest
    steps:

    # 1.下载源码
    - name: Checkout
      uses: actions/checkout@master

    # 2.打包构建
    - name: Build
      uses: actions/setup-node@master
    - run: npm install
    - run: npm run build
    - run: tar -zcvf release.tgz .nuxt static nuxt.config.js package.json package-lock.json pm2.config.json

    # 3.发布 Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        # GITHUB_TOKEN指github上创建的token
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        # draft是否是草稿
        draft: false
        # prerelease是否是预发布
        prerelease: false

    # 4.上传构建结果release.tgz到 Release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        # upload_url指上传的地址，通过创建release得到的
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # asset_path指上传的文件
        asset_path: ./release.tgz
        # asset_name指上传之后的文件名
        asset_name: release.tgz
        asset_content_type: application/x-tgz

    # 5.部署到服务器（通过ssh链接到生成环境服务器）
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        # host指服务器公网的ip 这里我是47.110.10.236  {在github项目上配置HOST，USERNAME，PORT，PASSWORD，这里地址https://github.com/cloveryuan/realworld-nuxtjs/settings/secrets/new}
        host: ${{ secrets.HOST }}
        # 远程服务器的用户名 这里指root
        username: ${{ secrets.USERNAME }}
        # 远程服务器的密码 自己服务器密码
        password: ${{ secrets.PASSWORD }}
         # 远程服务器的端口号 默认22
        port: ${{ secrets.PORT }}
        # 链接到远程服务器后开始构建走script，先cd到远程服务器的项目目录，wget后面的下载地址改为自己的仓库地址，接着tar解压发布包 release.tgz，接着npm install --production安装依赖，最后通过pm2 reload pm2.config.json启动服务
        script: |
          cd /root/realworld-nuxtjs
          wget https://github.com/cloveryuan/realworld-nuxtjs/releases/latest/download/release.tgz -O release.tgz
          tar zxvf release.tgz
          npm install --production
          pm2 reload pm2.config.json
